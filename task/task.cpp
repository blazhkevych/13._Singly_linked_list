/*
############################################ ЗАДАНИЕ ###########################################
					Односвязный список
Добавить в класс "Односвязный список" следующие методы:
	 вставка элемента в заданную позицию
void InsertByPosition(char data, int position);
	 удаление элемента по заданной позиции
void RemoveByPosition(int position);
	 поиск заданного элемента по ключу (функция возвращает позицию найденного элемента в
случае успеха или -1 в случае неудачи)
int Find(char key);
	 конструктор копирования
List(const List& obj);
	 перегруженный оператор =
List& operator = (const List & obj);
################################################################################################
		СТАТУС : Не готово.
################################################################################################
*/

//TODO: Протестировать разные ситуации, удаление/вставка -начало, конец, средина.

#include <iostream>
#include "List.h"
using namespace std;

int main()
{
	// Создаем объект класса List
	List lst;
	// Тестовая строка
	char s[] = "Hello, World !!!\n";
	// Выводим строку
	cout << s << endl;
	// Определяем длину строки
	int len = strlen(s);
	// Помещаем строку в список
	for (int i = len - 1; i >= 0; i--)
		lst.Add(s[i]);
	// Распечатываем содержимое списка
	lst.Print();
	// Удаляем два элемента списка
	lst.Del();
	lst.Del();
	// Распечатываем содержимое списка
	lst.Print();
	// Удаляем все элементы списка
	lst.DelAll();
	// Распечатываем содержимое списка
	lst.Print();

	return 0;
}